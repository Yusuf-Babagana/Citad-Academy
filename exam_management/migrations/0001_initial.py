# Generated by Django 4.2.13 on 2024-06-14 22:36

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("number_of_questions", models.IntegerField()),
                ("duration", models.DurationField()),
                (
                    "is_global",
                    models.BooleanField(
                        default=False, help_text="Check if this is a global exam"
                    ),
                ),
                ("is_published", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ExamAttempt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("current_question_index", models.PositiveIntegerField(default=0)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("time_remaining", models.PositiveIntegerField(blank=True, null=True)),
                ("score", models.PositiveIntegerField(blank=True, null=True)),
                ("completed", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="ExamCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("UNI", "University"),
                            ("POLY", "Polytechnic"),
                            ("COE", "College of Education"),
                            ("WAEC", "WAEC"),
                            ("NECO", "NECO"),
                            ("JAMB", "JAMB"),
                        ],
                        default="UNI",
                        max_length=4,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("year", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="ManualScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ca1_score", models.PositiveIntegerField(blank=True, null=True)),
                ("ca2_score", models.PositiveIntegerField(blank=True, null=True)),
                ("exam_score", models.PositiveIntegerField(blank=True, null=True)),
                ("total_score", models.PositiveIntegerField(blank=True, null=True)),
                ("date_assigned", models.DateField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("option_text", tinymce.models.HTMLField()),
                ("is_correct", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Questions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("instructions", ckeditor.fields.RichTextField(blank=True, null=True)),
                ("question_text", tinymce.models.HTMLField()),
                ("explanation", tinymce.models.HTMLField(blank=True, null=True)),
                (
                    "question_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="questions/images/"
                    ),
                ),
                (
                    "question_pdf",
                    models.FileField(
                        blank=True, null=True, upload_to="questions/pdfs/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to="exam_management.exam",
                    ),
                ),
            ],
        ),
    ]
